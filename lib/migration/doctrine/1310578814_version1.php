<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Version1 extends Doctrine_Migration_Base
{
    public function up()
    {
        $this->createTable('activation', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('activity', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'type' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
             ),
             'start_time' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '4',
             ),
             'end_time' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '4',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('battery', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('entity', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'name' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
             ),
             'comment' => 
             array(
              'type' => 'clob',
              'length' => '',
             ),
             'type' => 
             array(
              'type' => 'string',
              'notnull' => '',
              'length' => '255',
             ),
             'channel' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'error_lower_limit' => 
             array(
              'type' => 'float',
              'length' => '',
             ),
             'warning_lower_limit' => 
             array(
              'type' => 'float',
              'length' => '',
             ),
             'warning_upper_limit' => 
             array(
              'type' => 'float',
              'length' => '',
             ),
             'error_upper_limit' => 
             array(
              'type' => 'float',
              'length' => '',
             ),
             'social_security_number' => 
             array(
              'type' => 'integer',
              'comment' => 'taj szam',
              'length' => '8',
             ),
             'born_at' => 
             array(
              'type' => 'string',
              'comment' => 'szuletesi hely, idopont',
              'length' => '255',
             ),
             'address' => 
             array(
              'type' => 'string',
              'comment' => 'lakcim',
              'length' => '255',
             ),
             'locality_type_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'locality_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'locality2_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'root_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'lft' => 
             array(
              'type' => 'integer',
              'length' => '4',
             ),
             'rgt' => 
             array(
              'type' => 'integer',
              'length' => '4',
             ),
             'level' => 
             array(
              'type' => 'integer',
              'length' => '2',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('calendar', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'ical' => 
             array(
              'type' => 'clob',
              'notnull' => '1',
              'length' => '',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('data_source_affected', array(
             'data_source_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'data_source_id',
              1 => 'entity_id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('device', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'pan_id' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
             ),
             'extended_id' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '16',
             ),
             ), array(
             'indexes' => 
             array(
              'guid' => 
              array(
              'type' => 'unique',
              'fields' => 
              array(
               0 => 'pan_id',
               1 => 'extended_id',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('e_k_g', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'started_by' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '10',
             ),
             'heart_rate' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '2',
             ),
             'st_segment_elevation_ch1' => 
             array(
              'type' => 'float',
              'notnull' => '1',
              'comment' => 'in volts',
              'length' => '10',
              'scale' => '6',
             ),
             'st_segment_elevation_ch2' => 
             array(
              'type' => 'float',
              'notnull' => '1',
              'comment' => 'in volts',
              'length' => '10',
              'scale' => '6',
             ),
             'commonparams' => 
             array(
              'type' => 'array',
              'notnull' => '1',
              'length' => '',
             ),
             'channelparams' => 
             array(
              'type' => 'array',
              'notnull' => '1',
              'length' => '',
             ),
             'averages' => 
             array(
              'type' => 'array',
              'notnull' => '1',
              'length' => '',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('entity_type', array(
             'classname' => 
             array(
              'type' => 'string',
              'primary' => '1',
              'length' => '255',
             ),
             'id' => 
             array(
              'type' => 'integer',
              'unique' => '1',
              'length' => '8',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'classname',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('force_cell', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'value' => 
             array(
              'type' => 'boolean',
              'notnull' => '1',
              'length' => '25',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('humidity', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('light', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('locality_type', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'description' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
             ),
             'leiras' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('measurement', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('motion', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'value' => 
             array(
              'type' => 'boolean',
              'notnull' => '1',
              'length' => '25',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('observation', array(
             'observer_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'observer_id',
              1 => 'entity_id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('observer', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('on_off', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('open_closed', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'value' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'open',
              1 => 'closed',
              ),
              'notnull' => '1',
              'length' => '',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('power', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'value' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sensor', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'device_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'endpoint_number' => 
             array(
              'type' => 'integer',
              'length' => '1',
             ),
             'cluster_id' => 
             array(
              'type' => 'integer',
              'length' => '2',
             ),
             'hgw_id' => 
             array(
              'type' => 'integer',
              'length' => '2',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'guid' => 
              array(
              'type' => 'unique',
              'fields' => 
              array(
               0 => 'device_id',
               1 => 'endpoint_number',
               2 => 'cluster_id',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('temperature', array(
             'id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'autoincrement' => '1',
              'length' => '8',
             ),
             'entity_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'data_source_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'timestamp' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             ), array(
             'indexes' => 
             array(
              'timestamp' => 
              array(
              'fields' => 
              array(
               0 => 'timestamp',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_forgot_password', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'unique_key' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'expires_at' => 
             array(
              'type' => 'timestamp',
              'notnull' => '1',
              'length' => '25',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_group', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'name' => 
             array(
              'type' => 'string',
              'unique' => '1',
              'length' => '255',
             ),
             'description' => 
             array(
              'type' => 'string',
              'length' => '1000',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_group_permission', array(
             'group_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'permission_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'group_id',
              1 => 'permission_id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_permission', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'name' => 
             array(
              'type' => 'string',
              'unique' => '1',
              'length' => '255',
             ),
             'description' => 
             array(
              'type' => 'string',
              'length' => '1000',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_remember_key', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'remember_key' => 
             array(
              'type' => 'string',
              'length' => '32',
             ),
             'ip_address' => 
             array(
              'type' => 'string',
              'length' => '50',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_user', array(
             'id' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'autoincrement' => '1',
              'primary' => '1',
             ),
             'first_name' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'last_name' => 
             array(
              'type' => 'string',
              'length' => '255',
             ),
             'email_address' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'unique' => '1',
              'length' => '255',
             ),
             'username' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'unique' => '1',
              'length' => '128',
             ),
             'algorithm' => 
             array(
              'type' => 'string',
              'default' => 'sha1',
              'notnull' => '1',
              'length' => '128',
             ),
             'salt' => 
             array(
              'type' => 'string',
              'length' => '128',
             ),
             'password' => 
             array(
              'type' => 'string',
              'length' => '128',
             ),
             'is_active' => 
             array(
              'type' => 'boolean',
              'default' => '1',
              'length' => '25',
             ),
             'is_super_admin' => 
             array(
              'type' => 'boolean',
              'default' => '0',
              'length' => '25',
             ),
             'last_login' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
             ),
             'patient_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'observer_id' => 
             array(
              'type' => 'integer',
              'length' => '8',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'indexes' => 
             array(
              'is_active_idx' => 
              array(
              'fields' => 
              array(
               0 => 'is_active',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_user_group', array(
             'user_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'group_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'user_id',
              1 => 'group_id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('sf_guard_user_permission', array(
             'user_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'permission_id' => 
             array(
              'type' => 'integer',
              'primary' => '1',
              'length' => '8',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'user_id',
              1 => 'permission_id',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
        $this->createTable('entity_type_translation', array(
             'classname' => 
             array(
              'type' => 'string',
              'length' => '255',
              'primary' => '1',
             ),
             'name' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
             ),
             'lang' => 
             array(
              'fixed' => '1',
              'primary' => '1',
              'type' => 'string',
              'length' => '2',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'classname',
              1 => 'lang',
             ),
             'collate' => 'utf8_general_ci',
             'charset' => 'utf8',
             ));
    }

    public function down()
    {
        $this->dropTable('activation');
        $this->dropTable('activity');
        $this->dropTable('battery');
        $this->dropTable('entity');
        $this->dropTable('calendar');
        $this->dropTable('data_source_affected');
        $this->dropTable('device');
        $this->dropTable('e_k_g');
        $this->dropTable('entity_type');
        $this->dropTable('force_cell');
        $this->dropTable('humidity');
        $this->dropTable('light');
        $this->dropTable('locality_type');
        $this->dropTable('measurement');
        $this->dropTable('motion');
        $this->dropTable('observation');
        $this->dropTable('observer');
        $this->dropTable('on_off');
        $this->dropTable('open_closed');
        $this->dropTable('power');
        $this->dropTable('sensor');
        $this->dropTable('temperature');
        $this->dropTable('sf_guard_forgot_password');
        $this->dropTable('sf_guard_group');
        $this->dropTable('sf_guard_group_permission');
        $this->dropTable('sf_guard_permission');
        $this->dropTable('sf_guard_remember_key');
        $this->dropTable('sf_guard_user');
        $this->dropTable('sf_guard_user_group');
        $this->dropTable('sf_guard_user_permission');
        $this->dropTable('entity_type_translation');
    }
}